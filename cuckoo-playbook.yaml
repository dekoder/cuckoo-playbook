# Cuckoo Playbook For AWS Deployment
# Author: Keelyn Roberts
# Twitter: @real_slacker007
# Obscurity Labs LLC
# ANSIBLE VERION [ansible 2.6.2]

- hosts: localhost
  connection: local
  gather_facts: False

  vars:
          #   Assumes that both aws_access_key_id & aws_secret_access_key 
          #   environment variables are set on ansible controller

          aws_id: "{{ lookup('env', 'aws_access_key_id') }}"
          aws_key: "{{ lookup('env', 'aws_secret_access_key') }}"
          ubuntu16_04: ami-529fb82a

  tasks:
          # VPC for Cuckoo Sandbox
          - name: Create Cuckoo VPC
            ec2_vpc_net:
                    name: cuckoo-vpc
                    aws_access_key: "{{ aws_id }}"
                    aws_secret_key: "{{ aws_key }}"
                    cidr_block: 10.0.0.0/24
                    dns_hostnames: yes
                    dns_support: yes
                    region: us-west-2
                    state: present
                    tags:
                            environment: development
            register: ec2_vpc_net

          # Get Cuckoo VPC Info to use during config
          - name: Gather Cuckoo VPC Info
            ec2_vpc_net_facts:
                    aws_access_key: "{{ aws_id }}"
                    aws_secret_key: "{{ aws_key }}"
                    region: us-west-2
                    validate_certs: no
                    filters:
                            "tag:Name": cuckoo-vpc
            register: ec2_vpc_net_facts

          - debug: var=ec2_vpc_net_facts.vpcs[0].id

          - name: Create Cuckoo Security Group
            ec2_group:
                    aws_access_key: "{{ aws_id }}"
                    aws_secret_key: "{{ aws_key }}"
                    name: Cuckoo_Security_Group
                    description: Default Security Group for initial Cuckoo Setup
                    vpc_id: "{{ ec2_vpc_net_facts.vpcs[0].id }}"
                    region: us-west-2
                    state: present
                    rules:
                            - proto: tcp
                              from_port: 22
                              to_port: 22
                              cidr_ip: 0.0.0.0/0
                              rule_desc: SSH Admin Rule
            register: ec2_group
          - debug: var=ec2_group

          - name: Provision set of instances
            ec2:
                     aws_access_key: "{{ aws_id }}"
                     aws_secret_key: "{{ aws_key }}"
                     key_name: cuckoo-metal
                     region: us-west-2
                     instance_type: i3.metal
                     image: "{{ ubuntu16_04 }}"
                     instance_tags:
                             iname: i3metal

            register: ec2
          - debug: var=ec2
          - name: sleep for 500 seconds and then continue
            wait_for: timeout=300
            connection: localhost

          - ec2_instance_facts:
                  filters:
                          "tag:iname": i3metal
            register: ec2_instance_facts
          - debug: var=ec2_instance_facts
            #- name: Add I3.Metal Public IP to host group
            #add_host: hostname={{ item.public_ip }} groups=i3server
